<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web on </title>
    <link>http://seedstack.org/tags/web/</link>
    <description>Recent content in Web on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 18 Dec 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://seedstack.org/tags/web/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HTTPS with Undertow</title>
      <link>http://seedstack.org/guides/https-with-undertow/</link>
      <pubDate>Tue, 18 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>http://seedstack.org/guides/https-with-undertow/</guid>
      <description>&lt;p&gt;This guide will help you generate a certificate and configure Undertow to use it for HTTPS.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SeedStack on WebSphere</title>
      <link>http://seedstack.org/guides/seedstack-on-was/</link>
      <pubDate>Tue, 12 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>http://seedstack.org/guides/seedstack-on-was/</guid>
      <description>&lt;p&gt;IBM WebSphere Application Server (WAS) is a complex Web application server that can pose some challenges to
developers. The goal of this guide is to aggregate useful information about deploying SeedStack application on WAS
successfully.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Conversion to WAR</title>
      <link>http://seedstack.org/guides/conversion-to-war/</link>
      <pubDate>Mon, 06 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>http://seedstack.org/guides/conversion-to-war/</guid>
      <description>&lt;p&gt;SeedStack projects created by the &lt;a href=&#34;http://seedstack.org/docs/maven-plugin/generate/&#34;&gt;generate goal&lt;/a&gt; of the SeedStack Maven plugin are
designed to be run from command-line with an embedded Web server. You can convert this kind of project to a classic WAR.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CORS</title>
      <link>http://seedstack.org/docs/web/cors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://seedstack.org/docs/web/cors/</guid>
      <description>Cross-Origin Resource Sharing (CORS) is supported through a Java filter and can be enabled in any SeedStack application.
  Seed integrates the CORS filter from dzhuvinov software. There is no need to install and configure the filter manually, it is automatically registered by Seed. All filter options can be specified through configuration properties.
   Configuration CORS can be enabled and configuration as below:
Configuration Tool    web: cors: # The servlet path mapping on which CORS will be active path: (String) # If true, Cross-Origin-Resource-Sharing (CORS) will be enabled enabled: (boolean) # Allows to specify custom properties to the CORS filter (see below) properties: key: (String)   To dump the web.</description>
    </item>
    
    <item>
      <title>REST</title>
      <link>http://seedstack.org/docs/web/rest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://seedstack.org/docs/web/rest/</guid>
      <description>&lt;p&gt;The &lt;code&gt;seed-rest-core&lt;/code&gt; and its companion modules provides support for exposing REST resources using JAX-RS. SeedStack implements
the JAX-RS standard through the &lt;a href=&#34;https://jersey.github.io/&#34;&gt;Jersey 2&lt;/a&gt; implementation.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>REST API</title>
      <link>http://seedstack.org/docs/basics/rest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://seedstack.org/docs/basics/rest/</guid>
      <description>We already have a minimal REST API that says Hello World! in our demo application. In this page we will enrich the API with some SeedStack
A Swagger descriptor Swagger is a popular API description format. It helps in discovering API, whereas by humans or by machines.
To add a Swagger descriptor to our project, we just need to add the following dependency:
Maven Gradle   &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.seedstack.addons.swagger&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;swagger&amp;lt;/artifactId&amp;gt;&amp;lt;version&amp;gt;2.</description>
    </item>
    
    <item>
      <title>Running Web applications</title>
      <link>http://seedstack.org/docs/web/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://seedstack.org/docs/web/</guid>
      <description>&lt;p&gt;The &lt;code&gt;seed-web-core&lt;/code&gt; and its companion modules provide support for Web technologies, such as Servlets, WebSockets, embedded
Web servers, serving static resources, etc&amp;hellip; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Servlet, filters and listeners</title>
      <link>http://seedstack.org/docs/web/servlets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://seedstack.org/docs/web/servlets/</guid>
      <description>Servlets, filters and listeners can be detected and registered by SeedStack which makes them injectable and interceptable.
Servlets You can register a servlet by annotating your servlet class with @WebServlet:
@WebServlet(&amp;quot;/my-servlet&amp;quot;) public class MyServlet extends HttpServlet { ... }    You can specify a priority on each listener to order them in the context initialization and destruction sequences: add a @Priority annotation to the listener class with the absolute priority as value.</description>
    </item>
    
    <item>
      <title>Static resources</title>
      <link>http://seedstack.org/docs/web/static-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://seedstack.org/docs/web/static-resources/</guid>
      <description>SeedStack provides static resource serving from the classpath and the document root with some benefits over the container default resource serving:
 Automatic serving of pre-minified and/or pre-gzipped versions of resources, On-the-fly gzipping of resources, Cache friendly.  Behavior The behavior is to serve resources located under the document root folder and, if not found, under the META-INF/resources classpath location on the /* path. For example, consider the following folder tree:</description>
    </item>
    
    <item>
      <title>Testing</title>
      <link>http://seedstack.org/docs/basics/testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://seedstack.org/docs/basics/testing/</guid>
      <description>Testing is a crucial part of application development and should not be overlooked. SeedStack can help you to test your application by providing the necessary tools.
Unit testing SeedStack doesn&amp;rsquo;t provide specific tools for unit-testing. Just write your unit tests as usual.
Integration testing SeedStack provides several features to do integration testing. You can do things like altering configuration, defining launch arguments or set system properties. This can be done either for the execution of a full test class, for a specific test only, or both.</description>
    </item>
    
    <item>
      <title>Web bridge</title>
      <link>http://seedstack.org/addons/web-bridge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://seedstack.org/addons/web-bridge/</guid>
      <description>&lt;p&gt;The SeedStack Web bridge is an API that enables to quickly integrate your Web frontend to your SeedStack backend.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Web security</title>
      <link>http://seedstack.org/docs/web/security/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://seedstack.org/docs/web/security/</guid>
      <description>In a Web application, security can be enforced at the HTTP-level by a servlet filter using URL filtering patterns. This feature requires the following dependency in your project:
Maven Gradle   &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.seedstack.seed&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;seed-web-security&amp;lt;/artifactId&amp;gt;&amp;lt;version&amp;gt;3.15.1&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt;  Specifying versions manually is error-prone, use dependency management instead. Show version   dependencies { compile(&amp;quot;org.seedstack.seed:seed-web-security:3.15.1&amp;quot;) }    The security servlet filter is automatically added on /* and has the ability to intercept all application URLs.</description>
    </item>
    
    <item>
      <title>WebSockets</title>
      <link>http://seedstack.org/docs/web/websockets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://seedstack.org/docs/web/websockets/</guid>
      <description>Seed also integrates the Java API for WebSocket (JSR 356), allowing server and client endpoints to be injected. WebSocket support requires Java 7 and a compatible server to work.
Server endpoints Server endpoints have to explicitly specify a SeedBaseEndpointConfigurator to be managed by Seed.
@ServerEndpoint(value = &amp;quot;/chat&amp;quot;, configurator = BaseServerEndpointConfigurator.class) public class ChatEndpoint { @Logging private Logger logger; @Inject EchoService echoService; @OnOpen public void onOpen(Session session) { logger.info(&amp;quot;Connected ... &amp;quot; + session.</description>
    </item>
    
  </channel>
</rss>